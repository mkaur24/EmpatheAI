{"ast":null,"code":"var _jsxFileName = \"/Users/kaur/MScProject/audio-transcription-app/src/components/UploadAudio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './UploadAudio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadAudio({\n  setTranscription,\n  setSummary\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    setLoading(true);\n    try {\n      const response = await axios.post('https://3fa5-34-127-12-31.ngrok-free.app/upload', formData);\n      setTranscription(response.data.transcription);\n      setSummary(response.data.summary);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadAudio, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = UploadAudio;\nexport default UploadAudio;\nvar _c;\n$RefreshReg$(_c, \"UploadAudio\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadAudio","setTranscription","setSummary","_s","file","setFile","loading","setLoading","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","data","transcription","summary","error","console","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kaur/MScProject/audio-transcription-app/src/components/UploadAudio.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './UploadAudio.css';\n\nfunction UploadAudio({ setTranscription, setSummary }) {\n    const [file, setFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        setLoading(true);\n        try {\n            const response = await axios.post('https://3fa5-34-127-12-31.ngrok-free.app/upload', formData);\n            setTranscription(response.data.transcription);\n            setSummary(response.data.summary);\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"upload-container\">\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={handleUpload}>Upload</button>\n            {loading && <div className=\"spinner\"></div>}\n        </div>\n    );\n}\n\nexport default UploadAudio;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAC;EAAEC,gBAAgB;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7BG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMS,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,iDAAiD,EAAEJ,QAAQ,CAAC;MAC9FZ,gBAAgB,CAACe,QAAQ,CAACE,IAAI,CAACC,aAAa,CAAC;MAC7CjB,UAAU,CAACc,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACNd,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKwB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAElB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD/B,OAAA;MAAQgC,OAAO,EAAEnB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CxB,OAAO,iBAAIP,OAAA;MAAKwB,SAAS,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAAC3B,EAAA,CA/BQH,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}